version: "3.9"

services:
  wordpress:
    image: docker.io/bitnami/wordpress:6.2.1
    user: root
    depends_on:
      - mariadb
    restart: always
    volumes:
      - "./wordpress_data:/bitnami/wordpress"
    environment:
      - WORDPRESS_EMAIL=user@example.com
      - WORDPRESS_USERNAME=admin
      - WORDPRESS_PASSWORD=bitnami123bitnami123bitnami123
      - WORDPRESS_DATABASE_HOST=mariadb
      - WORDPRESS_DATABASE_PORT_NUMBER=3306
      - WORDPRESS_DATABASE_USER=wp_userr
      - WORDPRESS_DATABASE_PASSWORD=wp4SSbitnami
      - WORDPRESS_DATABASE_NAME=db_wordpress
      - WORDPRESS_SMTP_HOST=smtp.gmail.com
      - WORDPRESS_SMTP_PORT=587
      - WORDPRESS_SMTP_USER=your_email@gmail.com
      - WORDPRESS_SMTP_PASSWORD=your_password
    ports:
      - 9000:8080
    networks:
      - public-network

  mariadb:
    image: docker.io/bitnami/mariadb:10.6
    user: root
    restart: always
    volumes:
      - ./database:/bitnami/mariadb
    environment:
      - MARIADB_USER=wp_userr
      - MARIADB_DATABASE=db_wordpress
      - MARIADB_ROOT_PASSWORD=wp4SSbitnami
      - MARIADB_PASSWORD=wp4SSbitnami
    networks:
      - public-network

  keycloakdatabase:
    container_name: keycloakdatabase
    image: bitnami/postgresql:15.5.0
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - public-network
    volumes:
      - "postgresql_keycloak_data:/bitnami/postgresql"

  keycloak:
    container_name: keycloak_discourse
    image: bitnami/keycloak:22.0.4
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_CREATE_ADMIN_USER: "true"
      KEYCLOAK_ADMIN_USER: admin
      KEYCLOAK_ADMIN_PASSWORD: bitnami
      KEYCLOAK_DATABASE_HOST: keycloakdatabase
      KEYCLOAK_DATABASE_PORT_NUMBER: 5434
      KEYCLOAK_DATABASE_USER: postgres
      KEYCLOAK_DATABASE_PASSWORD: password
      KEYCLOAK_DATABASE_NAME: keycloak
      KEYCLOAK_HTTP_PORT: 8080
      PROXY_ADDRESS_FORWARDING: "true"
    ports:
      - "8080:8080"
    networks:
      - public-network

    depends_on:
      - keycloakdatabase
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"

  postgresqldiscourse:
    container_name: postgresqldiscourse
    image: docker.io/bitnami/postgresql:16
    volumes:
      - "postgresql_data:/bitnami/postgresql"
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_discourse
      - POSTGRESQL_DATABASE=bitnami_discourse
    networks:
      - discourse-network
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  redis:
    container_name: redis_discourse
    image: docker.io/bitnami/redis:7.0
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - "redis_data:/bitnami/redis"
    networks:
      - discourse-network
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  discourse:
    container_name: discourse
    image: docker.io/bitnami/discourse:3.1.3
    ports:
      - "3000:3000"
    volumes:
      - "discourse_data:/bitnami/discourse"
    depends_on:
      - postgresqldiscourse
      - redis
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - DISCOURSE_HOST=localhost
      - DISCOURSE_HOSTNAME=localhost
      - DISCOURSE_PORT_NUMBER=3000
      - DISCOURSE_DATABASE_HOST=postgresqldiscourse
      - DISCOURSE_DATABASE_PORT_NUMBER=5432
      - DISCOURSE_DATABASE_USER=bn_discourse
      - DISCOURSE_DATABASE_NAME=bitnami_discourse
      - POSTGRESQL_CLIENT_DATABASE_HOST=postgresqldiscourse
      - DISCOURSE_REDIS_HOST=redis
      - DISCOURSE_REDIS_PORT_NUMBER=6379
      - POSTGRESQL_CLIENT_POSTGRES_USER=postgres
      - POSTGRESQL_CLIENT_CREATE_DATABASE_NAME=bitnami_discourse
      - POSTGRESQL_CLIENT_CREATE_DATABASE_EXTENSIONS=hstore,pg_trgm
      - BITNAMI_DEBUG=true
      - DISCOURSE_EMAIL=greengage.admin@deusto.es
      - DISCOURSE_USERNAME=admin
      - DISCOURSE_PASSWORD=bitnami123bitnami123bitnami123
      - DISCOURSE_SMTP_HOST=smtp.gmail.com
      - DISCOURSE_SMTP_PORT=587
      - DISCOURSE_SMTP_USER=aaaaaaaaaa@bbbbbbbbbbb.com
      - DISCOURSE_SMTP_PASSWORD=xxxxxxxxxxxxxxxxxxxxxx
      - DISCOURSE_SMTP_PROTOCOL=tls
      - DISCOURSE_PRECOMPILE_ASSETS=no

    networks:
      - discourse-network
      - public-network
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  sidekiq:
    container_name: sidekiq_discourse
    image: docker.io/bitnami/discourse:3
    depends_on:
      - postgresqldiscourse
      - redis
      - discourse
    volumes:
      - "sidekiq_data:/bitnami/discourse"
    command: /opt/bitnami/scripts/discourse-sidekiq/run.sh
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - DISCOURSE_HOST=localhost
      - DISCOURSE_DATABASE_HOST=postgresqldiscourse
      - POSTGRESQL_CLIENT_DATABASE_HOST=postgresqldiscourse
      - DISCOURSE_DATABASE_PORT_NUMBER=5432
      - DISCOURSE_DATABASE_USER=bn_discourse
      - DISCOURSE_DATABASE_NAME=bitnami_discourse
      - DISCOURSE_REDIS_HOST=redis
      - DISCOURSE_REDIS_PORT_NUMBER=6379
    networks:
      - discourse-network
    logging:
      driver: "json-file"
      options:
        max-size: 10m
        max-file: "3"
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

volumes:
  postgresql_keycloak_data:
    driver: local
  postgresql_data:
    driver: local
  redis_data:
    driver: local
  discourse_data:
    driver: local
  sidekiq_data:
    driver: local

networks:
  public-network:
    driver: bridge
  discourse-network:
    driver: bridge
